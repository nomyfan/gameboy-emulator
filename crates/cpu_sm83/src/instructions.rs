type Opcode = u16;

pub(crate) struct Instruction {
    pub(crate) opcode: Opcode,
    pub(crate) instr_ty: InstructionType,
    pub(crate) cond: Option<Condition>,
    pub(crate) operand1: Option<Address>,
    pub(crate) operand2: Option<Address>,
}

pub(crate) enum InstructionType {
    NOP,
    LD,
    INC,
    DEC,
    ADD,
    JR,
    JP,
    // TODO
}

pub(crate) enum Address {
    R(Register),
    RM(Register),
    PC1, // 1 byte
    PC2, // 2 bytes
}

pub(crate) enum Condition {
    Z,
    NZ,
    C,
    NC,
}

pub(crate) enum Register {
    A,
    F,
    B,
    C,
    D,
    E,
    H,
    L,
    AF,
    BC,
    DE,
    HL,
    SP,
    SP_R8,
}

pub(crate) const INSTRUCTIONS: [Instruction; 126] = [
    // 0x0x
    Instruction {
        opcode: 0x00,
        instr_ty: InstructionType::NOP,
        cond: None,
        operand1: None,
        operand2: None,
    },
    Instruction {
        opcode: 0x01,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::BC)),
        operand2: Some(Address::PC2),
    },
    Instruction {
        opcode: 0x02,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::BC)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x03,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::BC)),
        operand2: None,
    },
    Instruction {
        opcode: 0x04,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: None,
    },
    Instruction {
        opcode: 0x05,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: None,
    },
    Instruction {
        opcode: 0x06,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::PC1),
    },
    Instruction {
        opcode: 0x08,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::PC2),
        operand2: Some(Address::R(Register::SP)),
    },
    Instruction {
        opcode: 0x0A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::RM(Register::BC)),
    },
    Instruction {
        opcode: 0x0B,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::BC)),
        operand2: None,
    },
    Instruction {
        opcode: 0x0E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::PC1),
    },
    Instruction {
        opcode: 0x0C,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: None,
    },
    Instruction {
        opcode: 0x0D,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: None,
    },
    // 0x1x
    Instruction {
        opcode: 0x11,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::DE)),
        operand2: Some(Address::PC2),
    },
    Instruction {
        opcode: 0x12,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::DE)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x13,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::DE)),
        operand2: None,
    },
    Instruction {
        opcode: 0x14,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: None,
    },
    Instruction {
        opcode: 0x15,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: None,
    },
    Instruction {
        opcode: 0x16,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::PC1),
    },
    Instruction {
        opcode: 0x18,
        instr_ty: InstructionType::JR,
        cond: None,
        operand1: Some(Address::PC1),
        operand2: None,
    },
    Instruction {
        opcode: 0x1A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::RM(Register::DE)),
    },
    Instruction {
        opcode: 0x1B,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::DE)),
        operand2: None,
    },
    Instruction {
        opcode: 0x1C,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: None,
    },
    Instruction {
        opcode: 0x1D,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: None,
    },
    Instruction {
        opcode: 0x1E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::PC1),
    },
    // 0x2x
    Instruction {
        opcode: 0x20,
        instr_ty: InstructionType::JR,
        cond: Some(Condition::NZ),
        operand1: Some(Address::PC1),
        operand2: None,
    },
    Instruction {
        opcode: 0x21,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::HL)),
        operand2: Some(Address::PC2),
    },
    Instruction {
        opcode: 0x22,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x23,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::HL)),
        operand2: None,
    },
    Instruction {
        opcode: 0x24,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: None,
    },
    Instruction {
        opcode: 0x25,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: None,
    },
    Instruction {
        opcode: 0x26,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::PC1),
    },
    Instruction {
        opcode: 0x28,
        instr_ty: InstructionType::JR,
        cond: Some(Condition::Z),
        operand1: Some(Address::PC1),
        operand2: None,
    },
    Instruction {
        opcode: 0x2A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x2B,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::HL)),
        operand2: None,
    },
    Instruction {
        opcode: 0x2C,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: None,
    },
    Instruction {
        opcode: 0x2D,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: None,
    },
    Instruction {
        opcode: 0x2E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::PC1),
    },
    // 0x3x
    Instruction {
        opcode: 0x20,
        instr_ty: InstructionType::JR,
        cond: Some(Condition::NC),
        operand1: Some(Address::PC1),
        operand2: None,
    },
    Instruction {
        opcode: 0x31,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::SP)),
        operand2: Some(Address::PC2),
    },
    Instruction {
        opcode: 0x32,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x33,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::SP)),
        operand2: None,
    },
    Instruction {
        opcode: 0x34,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: None,
    },
    Instruction {
        opcode: 0x35,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: None,
    },
    Instruction {
        opcode: 0x36,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::PC1),
    },
    Instruction {
        opcode: 0x28,
        instr_ty: InstructionType::JR,
        cond: Some(Condition::C),
        operand1: Some(Address::PC1),
        operand2: None,
    },
    Instruction {
        opcode: 0x3A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x3B,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::SP)),
        operand2: None,
    },
    Instruction {
        opcode: 0x3C,
        instr_ty: InstructionType::INC,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: None,
    },
    Instruction {
        opcode: 0x3D,
        instr_ty: InstructionType::DEC,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: None,
    },
    Instruction {
        opcode: 0x3E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::PC1),
    },
    // 0x4x
    Instruction {
        opcode: 0x40,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x41,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x42,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x43,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x44,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x45,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x46,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x47,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::B)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x48,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x49,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x4A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x4B,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x4C,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x4D,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x4E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x4F,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::C)),
        operand2: Some(Address::R(Register::A)),
    },
    // 0x5x
    Instruction {
        opcode: 0x50,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x51,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x52,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x53,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x54,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x55,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x56,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x57,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::D)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x58,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x59,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x5A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x5B,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x5C,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x5D,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x5E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x5F,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::E)),
        operand2: Some(Address::R(Register::A)),
    },
    // 0x6x
    Instruction {
        opcode: 0x60,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x61,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x62,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x63,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x64,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x65,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x66,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x67,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::H)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x68,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x69,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x6A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x6B,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x6C,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x6D,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x6E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x6F,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::L)),
        operand2: Some(Address::R(Register::A)),
    },
    // 0x7x
    Instruction {
        opcode: 0x70,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x71,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x72,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x73,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x74,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x75,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x77,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0x78,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::B)),
    },
    Instruction {
        opcode: 0x79,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::C)),
    },
    Instruction {
        opcode: 0x7A,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::D)),
    },
    Instruction {
        opcode: 0x7B,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::E)),
    },
    Instruction {
        opcode: 0x7C,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::H)),
    },
    Instruction {
        opcode: 0x7D,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::L)),
    },
    Instruction {
        opcode: 0x7E,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::RM(Register::HL)),
    },
    Instruction {
        opcode: 0x7F,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::R(Register::A)),
    },
    // 0x8x
    // 0x9x
    // 0xAx
    // 0xBx
    // 0xCx
    Instruction {
        opcode: 0xC2,
        instr_ty: InstructionType::JP,
        cond: Some(Condition::NZ),
        operand1: Some(Address::PC2),
        operand2: None,
    },
    Instruction {
        opcode: 0xC3,
        instr_ty: InstructionType::JP,
        cond: None,
        operand1: Some(Address::PC2),
        operand2: None,
    },
    Instruction {
        opcode: 0xCA,
        instr_ty: InstructionType::JP,
        cond: Some(Condition::Z),
        operand1: Some(Address::PC2),
        operand2: None,
    },
    // 0xDx
    Instruction {
        opcode: 0xD2,
        instr_ty: InstructionType::JP,
        cond: Some(Condition::NZ),
        operand1: Some(Address::PC2),
        operand2: None,
    },
    Instruction {
        opcode: 0xDA,
        instr_ty: InstructionType::JP,
        cond: Some(Condition::C),
        operand1: Some(Address::PC2),
        operand2: None,
    },
    // 0xEx
    Instruction {
        opcode: 0xE2,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::RM(Register::C)),
        operand2: Some(Address::R(Register::A)),
    },
    Instruction {
        opcode: 0xE9,
        instr_ty: InstructionType::JP,
        cond: None,
        operand1: Some(Address::RM(Register::HL)),
        operand2: None,
    },
    Instruction {
        opcode: 0xEA,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::PC2),
        operand2: Some(Address::R(Register::A)),
    },
    // 0xFx
    Instruction {
        opcode: 0xF2,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::RM(Register::C)),
    },
    Instruction {
        opcode: 0xF8,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::HL)),
        operand2: Some(Address::R(Register::SP_R8)),
    },
    Instruction {
        opcode: 0xF9,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::SP)),
        operand2: Some(Address::R(Register::HL)),
    },
    Instruction {
        opcode: 0xFA,
        instr_ty: InstructionType::LD,
        cond: None,
        operand1: Some(Address::R(Register::A)),
        operand2: Some(Address::PC2),
    },
];
